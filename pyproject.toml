[tool.poetry]
name = "django-signal-webhooks"
version = "0.2.4"
description = "Add webhooks to django using signals."
authors = [
    "Matti Lamppu <lamppu.matti.akseli@gmail.com>",
]
packages = [
    { include = "signal_webhooks" },
]
license = "MIT"
readme = "README.md"
homepage = "https://mrthearman.github.io/django-signal-webhooks/"
repository = "https://github.com/MrThearMan/django-signal-webhooks"
keywords = [
    "django",
    "signal",
    "webhooks"
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Django :: 3.1",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Natural Language :: English",
]
include = [
    "README.md",
    "LICENSE",
]
exclude = [
    "tests",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/MrThearMan/django-signal-webhooks/issues"

[tool.poetry.dependencies]
python = ">=3.8,<4"
Django = ">=3.1"
asgiref = ">=3.5.0"
httpx = ">=0.23.0"
cryptography = ">=36.0.0"
django-settings-holder = ">=0.1.0"
djangorestframework = { version = ">=3.13.0", optional = true}

[tool.poetry.group.test.dependencies]
pytest = "7.2.1"
coverage = "6.5.0"
pytest-django = "4.5.2"
pytest-freezegun = "0.4.2"
pre-commit = "3.0.1"
tox = "4.4.2"
tox-gh-actions = "3.0.0"
coveralls = "3.3.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "1.4.2"
pymdown-extensions = "9.9.2"
mkdocs-mermaid2-plugin = "0.6.0"

[tool.poetry.group.lint.dependencies]
mypy = "0.991"
django-stubs = "1.14.0"
djangorestframework-stubs = "1.8.0"

[tool.poetry.extras]
drf = ["djangorestframework"]

[tool.black]
line-length = 120

[tool.ruff]
fix = true
line-length = 120
exclude = [
    "tests/*",
]
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "I",  # isort
    "S",  # flake8-bandit
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "T",  # flake8-print
    "W",  # pycodestyle warnings
]
ignore = [
    "S101",  # assert is OK
    "S105",  # no hardcoded passwords
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"signal_webhooks/admin.py" = ["S105"]

[tool.ruff.isort]
known-third-party = [
    "django",
    "asgiref",
    "httpx",
    "cryptography",
    "django-settings-holder",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = "True"
warn_unused_configs = "True"
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.coverage.run]
relative_files = true

[tool.coverage.report]
omit = [
    "tests/*",
    "docs/*",
    ".venv/*",
    ".tox/*",
]
exclude_lines = [
    "if TYPE_CHECKING:",
    "except ImportError:",
    "pragma: no cover",
]

[tool.pytest.ini_options]
addopts = "-vv -s --log-cli-level=INFO"
markers = [
    "e2e: Marks tests as e2e.",
]

[tool.django-stubs]
django_settings_module = "tests.django.settings"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{38, 39, 310, 311}-django{31, 32, 40, 41}
isolated_build = true

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311

[testenv]
allowlist_externals =
    poetry
setenv =
    PYTHONPATH = {toxinidir}
deps =
    django31: Django>=3.1,<3.2
    django32: Django>=3.2,<4.0
    django40: Django>=4.0,<4.1
    django41: Django>=4.1,<4.2

    asgiref>=3.5.0
    httpx>=0.23.0
    cryptography>=36.0.0
    django-settings-holder>=0.1.0
    djangorestframework>=3.13.0

    pytest
    coverage
    pytest-django
    pytest-freezegun

commands =
    coverage run -m pytest -m "not e2e"
"""

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
